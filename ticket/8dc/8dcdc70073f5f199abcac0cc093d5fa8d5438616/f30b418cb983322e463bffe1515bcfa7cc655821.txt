 



INTERNET-DRAFT                                                      X.Yu
Intended Status: Standard Track            Huawei Technologies Co., Ltd.
Expires: January 9, 2020                                    July 8, 2019



Layer 3 Quantized Congestion Notification(L3QCN)in the Converged Network
                        draft-yu-tsvwg-l3qcn-00


Abstract

   In the managed modern datacenter, the HPC and AI applications demand
   for lossless and low latency network to assure performance. Some
   congestion control mechanisms, such as CN, PFC, ETS which is
   introduced by IEEE 802.1 focus on the L2 network domain. While in the
   IP-routed datacenter network, current TCP/IP stacks can't apply all
   the mechanisms on L3 or above network layers. DCQCN is an end-to-end
   congestion control scheme for RoCEv2.This draft introduces the
   L3QCN(Layer 3 Quantized Congestion Notification), an end to end
   congestion control scheme which adopt QCN and DCQCN on L3 network. It
   specifies protocols, procedures, and managed objects to support
   congestion control on the datacenter network.

Status of this Memo

   This Internet-Draft is submitted to IETF in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at http://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on January 9, 2020.


Copyright and License Notice

   Copyright (c) 2019 IETF Trust and the persons identified as the
   document authors. All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
 


Xiang Yu                Expires January 9, 2020                 [Page 1]

INTERNET DRAFT    L3 Quantized Congestion Notification      July 8, 2019


   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document. Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document. Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.



Table of Contents

   1  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . .  3
   2.  Conventions  . . . . . . . . . . . . . . . . . . . . . . . . .  4
   3.  Abbreviations  . . . . . . . . . . . . . . . . . . . . . . . .  4
   4  Current Congestion Control method . . . . . . . . . . . . . . .  4
     4.1 QCN Introduction . . . . . . . . . . . . . . . . . . . . . .  4
       4.1.1 QCN Technical Solution . . . . . . . . . . . . . . . . .  4
       4.1.2 The limitation of QCN  . . . . . . . . . . . . . . . . .  7
     4.2 Introduction of DCQCN  . . . . . . . . . . . . . . . . . . .  7
       4.2.1 DCQCN technical solution . . . . . . . . . . . . . . . .  7
       4.2.2 The limitation of DCQCN  . . . . . . . . . . . . . . . .  7
   5. Layer3 QCN  . . . . . . . . . . . . . . . . . . . . . . . . . .  8
     5.1 L3QCN Introduction . . . . . . . . . . . . . . . . . . . . .  8
     5.2 Use case of L3QCN  . . . . . . . . . . . . . . . . . . . . .  8
       5.2.1 A hybrid method with QCN . . . . . . . . . . . . . . . .  8
       5.2.2 L3QCN in CLOS fat-tree . . . . . . . . . . . . . . . . .  8
   6. Conclusion  . . . . . . . . . . . . . . . . . . . . . . . . . . 12
   7  Security Considerations . . . . . . . . . . . . . . . . . . . . 13
   8  IANA Considerations . . . . . . . . . . . . . . . . . . . . . . 13
   9  References  . . . . . . . . . . . . . . . . . . . . . . . . . . 13
     9.1  Normative References  . . . . . . . . . . . . . . . . . . . 13
     9.2  Informative References  . . . . . . . . . . . . . . . . . . 13














 


Xiang Yu                Expires January 9, 2020                 [Page 2]

INTERNET DRAFT    L3 Quantized Congestion Notification      July 8, 2019


1  Introduction

There are 3 types of traffic in the DC network:
   1)Storage Traffic (Sensitive to packet loss)
   2)High Performance Compute(HPC) Traffic (Sensitive to latency) 
   3)Application Traffic or TCP traffic ( Allow certain packet loss and
   latency)


Traditionally, DC network treat different traffic with different network
bearers which exist in the small scale Datacenter. As the scale of the
data center grows, running three different types of networks is not an
economic solution. There is an option which use the Ethernet to bear all
the traffic by applying the congestion control mechanisms. IEEE has
introduced the following specifications:

1. Enhanced Transmission Selection [ETS] 

When the offered load in a traffic class doesn't use its allocated
bandwidth, enhanced transmission selection will allow other traffic
classes to use the available bandwidth. This avoid the burst of one
class traffic to influence other classes which provide the minimum
guaranteed bandwidth to all traffic classes. This also facilitates the
multiple classes existing in converged network.

2.Priority-based Flow Control[PFC] 

Data Center Bridging networks (bridges and end nodes) are characterized
by limited bandwidth-delay product and limited hop-count. Traffic class
is identified by the VLAN tag priority values. Priority-based flow
control is intended to eliminate frame loss due to congestion. This
realized the lossless of storage stream and no impact to other 2 traffic
classes when all the 3 traffic classes coexist in the Ethernet. 

3.Quantized Congestion Notification [QCN] 

This mechanism enable bridges to signal congestion information to end
stations capable of transmission rate limiting to avoid frame loss.
Resolve the latency increase caused by flow control or packet
retransmission to achieve the higher network throughput.

This draft introduce a L3QCN machenism to resolve the congestion problem
under the converged network in the datacenter. Different classes of
traffic will be configured with corresponding priorities. Bridge will
apply the policies of congestion control according to defined priority
of congested traffic.


 


Xiang Yu                Expires January 9, 2020                 [Page 3]

INTERNET DRAFT    L3 Quantized Congestion Notification      July 8, 2019


2.  Conventions

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
"SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
"OPTIONAL" in this document are to be interpreted as described in BCP 14
[RFC2119][RFC8174] when, and only when, they appear in all capitals, as
shown here.

3.  Abbreviations

CNA Congestion Notification Adapter

CNM Congestion Notification Message

CP Congestion Point

DCQCN Data Center Quantized Congestion Notification

ECN Explicit Congestion Notification

ETS Enhanced Transmission Selection

NP Notification Point 

PFC Priority-based Flow Control

RoCEv2 RDMA over Converged Ethernet version 2

RP Reaction Point

4  Current Congestion Control method

4.1 QCN Introduction

4.1.1 QCN Technical Solution

QCN is defined in IEEE 802.1Qau, there are 2 types of Ethernet frame:
One data frame with CN-TAG as Figure 1 shown. The Converged Network
Adapters (CNA) which support QCN function will send out the CN-TAG frame
when connecting network domain. The difference from the normal frame is
the CN-TAG field in the head of Ethernet frame which includes RPID (also
known as FLOW-ID). RPID will uniquely identifies every stream sent by
the adaptor. When the congestion appeared, bridge will send out
CNM(Congestion Notification Message) frame(introduced in second clause)
to notify the source node to stop sending this stream. The FLOW-ID of
source frame will be encapsulated in the CNM frame. When the adaptor
receives the CNM frame, it will reduce the transmission rate of the
identified flow in order to control the specific traffic precisely.
 


Xiang Yu                Expires January 9, 2020                 [Page 4]

INTERNET DRAFT    L3 Quantized Congestion Notification      July 8, 2019


                Data Frame                       CMN
           +----------------+        +---------------------------+
           |  DA (6 bytes)  |        |  DA = SampledFrame.SA     |
           +----------------+        +---------------------------+
           |  SA (6 bytes)  |        | SA = Switch.QCN.MACSA     |
           +----------------+        +---------------------------+
           | S-TAG (4 bytes)|        |       S-TAG               |
           +----------------+        +---------------------------+
           | C-TAG (4 bytes)|        |       C-TAG               |
           +----------------+        +---------------------------+
           |CN-TAG (4 bytes)-----|   |CN-TAG = SampledFrame.CN-TAG
           +----------------+    |   +---------------------------+
           |     MSDU       |    |   |    CNM Payload            |
           +----------------+    |   +---------------------------+
                                 |
                                 |
                                 |
             +-------------------|-+----------------+
             |EtherType (2 bytes)  | RPID (2 bytes) |
             +---------------------+----------------+

                    Figure 1. QCN data frame and CMN


                          CNM Payload
            +------------------------------------+
            |           Version (4 bits)         |
            +------------------------------------+
            |          Reserved (6 bits)         |
            +------------------------------------+
            |           QntzFb (6 bits)          |
            +------------------------------------+
            |           CPID (64 bits)           |
            +------------------------------------+
            |          Qoffeset (16 bits)        |
            +------------------------------------+
            |          Qdelta (16 bits)          |
            +------------------------------------+
            |   Encapsulated Priority (16 bits)  |
            +------------------------------------+
            |    Encapsulated MAC-DA (48 bits)   |
            +------------------------------------+
            |   Encapsulated Frame Length = 64   |
            +------------------------------------+
            | First 64 bytes of the Sampled Data |
            |             Frame MSDU             |
            +------------------------------------+
                    Figure 2. CMN payload
 


Xiang Yu                Expires January 9, 2020                 [Page 5]

INTERNET DRAFT    L3 Quantized Congestion Notification      July 8, 2019


The CNM frame is shown as Figure 2:
   Field 1: Version of CNM message (4 bits)
   Field 2: Reserved (6 bits)
   Field 3: QntzFB, Quantized feedback of CNM message (6 bits)
   Field 4: Congestion Point Identifier (CPID, 8 bytes). In order to
   assure the uniqueness of the identifier, use the MAC address as the
   upper 6 bytes. Lower 2 bytes identify the different ports or
   different priority classes in the same device.
   Field 5: QOffset (2 bytes). Current number of available bytes in the
   sending queue of the congested point (CP)
   Field 6: QDelta (2 bytes), the difference of available bytes of CP at
   2 time point.
   Field 7: Encapsulated priority (2 bytes). Use upper 3 bits of the 1st
   byte to fill the priority of the CNM frame. Else is 0.
   Field 8: Encapsulated destination MAC address (6 bytes). Fill the
   destination MAC address which trigger the CNM frame.
   Field 9: Encapsulated MSDU length (2 bytes). The length of the
   Encapsulated MSDU.
   Field 10: Encapsulated MSDU (64 bytes). Fill in the payload of the
   CNM.

   QCN has defined Reaction Point (RP) and Congestion Point (CP)as the
   congestion management loop components. RP is an end station where the
   rate of injection of a flow (or flows) is changed due to congestion
   signals; usually, the place where rate limiters reside. CP is a VLAN-
   aware bridge or end station that monitors a single queue serving one
   or more Congestion Notification Priority Values, can generate CNM and
   can remove Congestion Notification Tags. This provide the posibility
   that CNM feedback loop could be end station to end station (NIC -NIC)
   or bridge to end station (bridge - NIC).




                                  NIC to NIC
                                CNM feedback loop
              --------- <-------------------------------------
              |  End  |                              |  End  |
              |       |  Network to NIC  ---------   |       |
              |Station| CNM feedback loop|       |   |Station|
              --------- <----------------|Bridge |   ---------
           Reaction Point                |       | Congestion Point
              (RP)                       ---------      (CP)
                                     Congestion Point
                                          (CP)

                    Figure 3. QCN Congestion Management Loop

 


Xiang Yu                Expires January 9, 2020                 [Page 6]

INTERNET DRAFT    L3 Quantized Congestion Notification      July 8, 2019


4.1.2 The limitation of QCN

During the congestion, bridge need to encapsulate the FLOW-ID(in the
head of Ethernet frame) in the CNM. Then replace the destination MAC
address of CNM with the source MAC address of the congested frame in
order to ensure CNM could be send back the sending server. Sending
server reduce the flow according to the FLOW-ID carried in the CNM. This
characteristic limit QCN only in Ethernet(Level 2 in ISO). Since the
head of Ethernet frame will be changed during every packet routing in
the IP network, the FLOW-ID and MAC address of sending server will be
lost. So the downstream bridge could not create the CNM and send back to
the sending server. QCN couldn't support the Layer 3 networking and has
limited scalability.

4.2 Introduction of DCQCN 

4.2.1 DCQCN technical solution

DCQCN[DCQCN] is a kind of congestion control solution proposed by
Microsoft for the DC network domain. DCQCN is mainly deployed in the
RoCEv2[RoCEv2] scenarios. DCQCN defines Reaction Point(RP), Notification
Point(NP) and Congestion Point(CP) as the congestion management loop
components. RP is the end node that performs rate limitation to prevent
congestion. NP is the end node that receives the packets from the
injector and sends back notifications to the injector for indications
regarding the congestion situation. CP is the switch in which congestion
happens in its queue. CP set the Explicit Congestion Notification[ECN]
for the datagram with probability according to the degree of the
congestion. When the datagram arrive at NP, NP construct Congestion
Notification Packet(CNP) to RP. Then RP reduce or increase the
transmission rate according to the dedicated algorithm which is similar
to QCN.

4.2.2 The limitation of DCQCN 

DCQCN construct ECN tag during the congestion and forward to NP. NP
construct CNP to notify RP. With the growth of DCN scale, RP could not
react timely since the control loop delay is quite big. When RP reacts
according to the CNP from NP across a large-scale network, oscillations
in the injection rate may happen if congestion situation changes quickly
which may degrade the throughput of the network.

On CP(switch), DCQCN algorithm relies on ECN which uses two bits in
Diffserv field of IP header of the packet to indicate congestion. ECN
marks the packet based on the queue threshold which is a probabilistic
function of queue length. Queue length is a kind of instantaneous value
which could not provide a global view of the network congestion
situation. DCQCN use ECN on CP since ECN is a common feature of
 


Xiang Yu                Expires January 9, 2020                 [Page 7]

INTERNET DRAFT    L3 Quantized Congestion Notification      July 8, 2019


commodity data center switches.

5. Layer3 QCN

5.1 L3QCN Introduction

Actually, beside ECN, CP could provide more information for RP to take
reference. For example, dynamic statistics of ECN and congestion state
on the CP nodes. QCN has defined the control loop that CP(bridge or end
station) could send congestion signals to RP directly. Make QCN routable
and CP directly send the CNM to RP on the layer 3 DCN contribute to the
idea of L3QCN. 

L3QCN is a technical solution to resolve the congestion problem under
the converged network in the datacenter. Different class of traffic will
be configured with corresponding priorities. Bridge will deploy the
policies of congestion control according to the class of congested
traffic which is defined by the priority.

5.2 Use case of L3QCN

5.2.1 A hybrid method with QCN

Deploy priority 5 to the traffic sent out by QCN server. When the queue
buffer for the priority 5 exceed the defined threshold, the bridge will
back-haul the congestion information to the accessing TOR. TOR and HOST
can reach to each other on the Ethernet which is similar to a L2 domain.
In this situation, standard QCN is performed. Accessing TOR transform
the congestion information to standard CNM frame and send to QCN server
which realize the congestion control.

Deploy priority 7 to the traffic sent out by RoCEv2 server. When the
queue buffer for the priority 7 exceed the defined threshold, CP judges
the key flow causing the congestion. Then CP construct the standard CNP.
The RoCEv2 server reduce the transform rate according to the probability
of CNP reception.

5.2.2 L3QCN in CLOS fat-tree

L3QCN control steps are as follows:

1)Datagram sent out from QCN server enters the accessing TOR. Firstly,
accessing TOR will save the source MAC address, FLOW-ID, VLAN-TAG and IP
5-tuple to the local table, shown in Table 1. Then TOR perform the
normal routing.


 Src IP        Dst IP       Src   Dst   Proto MAC SA        Flow    VLAN
 


Xiang Yu                Expires January 9, 2020                 [Page 8]

INTERNET DRAFT    L3 Quantized Congestion Notification      July 8, 2019


                            Port  Port  -col                ID      TAG
 192.168.2.x   192.168.3.x  5678  21    6     0x01a4f5aefe  0xa878   100
 10.1.10.x     10.2.20.x    8957  21    6     0xfd16783acd  0xc9a0  1024
 192.168.2.x   10.3.50.x    2345  80    6     0x0a25364101  0x0ac9   3
 200.1.2.x     100.2.3.x    2567  47    17    0xed16d8ea0a  0x37a0   90


                    Table 1. FLOW-ID Mapping Table


2)Shown in Figure 4. Congestion caused by Incast flow, T4 detect the
congestion in a certain queue and exceed the threshold. Distinguish the
flow model according to the priority of the queue.

                   +-----------+               +-----------+
                   |  SPINE#1  |               |  SPINE#2  |
                   |  * * * * * * *   * * * * * * *        |
                   +-* ----   -+    *          +----* -----+
                    *              *  *               *
                   *              *     *               *
                  *              *        *               *
           +-----*-----+  +-----*-----+ +----*------+  +-----------+
           |   AGG#1   |  |  AGG#2    | |   AGG#3   |  |  AGG#4    |
           |     *     |  |     *     | |        *  |  |     *     |
           +-----*-----+  +-----*-----+ +----------*+  +------*----+
                 *              *                    *         *
                 *              *                      *        *
                 *              *                       *       *
                 *              *                               *
           +-----*-----+  +-----*-----+ +-----------+  +-*--- --*--+
           |  TOR#1    |  |  TOR#2    | |   TOR#3   |  | *TOR#4 *  |
           |     *     |  |     *     | |           |  | * /---\*  |
           +-----*-----+  +-----*-----+ +-----------+  +-*| CP  |*-+
            /|\  *          /|\ *                        * \---/*
             |   *           |  *                        *   |  *
             |   *           |  *                        *   |  *
             |   *           |  *                        *  \|/ *
           +-----*-----+  +-- --*-- --+ +-----------+  +-*------*--+
           | SERVER#1  |  | SERVER#2  | |  SERVER#3 |  | SERVER#4  |
           |           |  |           | |           |  |           |
           +-----------+  +-----------+ +-----------+  +-----------+

                    Figure 4. Incast flow model

3)If it is the flow from QCN server, conduct self-defined CNM which
include the 5-tuple, congestion indications (defined in QCN
specification, such as QntzFb, CPID, Qoffset,QDelta), encapsulate IP
+UDP. UDP need to use a specific port No. which is used to recognize the
 


Xiang Yu                Expires January 9, 2020                 [Page 9]

INTERNET DRAFT    L3 Quantized Congestion Notification      July 8, 2019


QCN frame in TOR. Or use a bit in the IP head(reserved bit) to indicate
the type of the frame. The dedicate IP is set to the source IP which
assure the CNM could be routed to the accessing TOR. It's better to
construct the self-defined CNM based on the standard CNM to reduce the
writing times which might increase the performance. 

4)As shown in the Figure 5&6 , T2 recognize the self-defined CNM
according to the destination UDP port. T2 map the self-defined CNM to
the standard CNM and send to H2. The QCN is performed in L2 domain
because the adaptor of H2 support the standard QCN.


                   +-----------+                +-----------+
                   |  SPINE#1  |                |  SPINE#2  |
                   |         ** * *             |           |
                   +--------*--+     *          +-----------+
                             *         *
                              *          *
                               *           *
           +-----------+  +-----*-----+  +----*------+  +-----------+
           |   AGG#1   |  |  AGG*2    |  |   AGG#3   |  |  AGG#4    |
           |           |  |     *     |  |        *  |  |           |
           +-----------+  +-----*-----+  +----------*+  +-----------+
                                *                     *
                                *                       *
                                *                         *
                                *                        Private CNP
           +----------+   +-----------+   +----------+  +-----*-----+
           |  TOR#1   |   |  TOR*2    |   |  TOR#3   |  |  TOR#4    |
           |          | /-|-----------|-\ |          |  |   /---\   |
           +----------+ | +-----------+ | +----------+  +- | CP  | -+
                        |       * /|\   |                   \---/
                        |       *  |    |                     |
                        |  Standard|CNP |                     |
                        |       *  |    |                    \|/
           +----------+ | +-----*--+--+ | +----------+  +-----------+
           | SERVER#1 | | | SERVER#2  | | | SERVER#3 |  | SERVER#4  |
           |          | | |           | | |          |  |           |
           +----------+ | +-----------+ | +----------+  +-----------+
                        |   L2 domain   |
                        \---------------/

                    Figure 5. Construct the self-defined CNM



                     +-----------------------------------------+
                     |          IP                             |
 


Xiang Yu                Expires January 9, 2020                [Page 10]

INTERNET DRAFT    L3 Quantized Congestion Notification      July 8, 2019


                     |----------------------+                  |
                     |DIP:Flow's SIP        |                  |
                     |----------------------+                  |
                     |SIP:Flow's DIP        |                  |
                     +-----------------------------------------+
                     |          UDP                            |
                     +----------------------+                  |
                     |DPORT:L3QCN Port      |                  |
                     +----------------------+------------------+
                     |Payload(5-tuple,congestion extent metric)|
                     +-----------------------------------------+

             Private CNM transfer                    CNM Payload
                to Standard CNM              +-------------------------+
                      |                 +----|     Version (4 bits)    |
                      |                 |    +-------------------------+
                      |                 |    |    Reserved (6 bits)    |
                     \|/                |    +-------------------------+
                                        |    |     QntzFb (6 bits)     |
                     CNM                |    +-------------------------+
           +------------------------+   |    |      CPID (64 bits)     |
           |  DA = SampledFrame.SA  |   |    +-------------------------+
           +------------------------+   |    |     Qoffset (16 bits)   |
           |  SA = Switch.QCN.MACSA |   |    +-------------------------+
           +------------------------+   |    |     QDelta (16 bits)    |
           |         S-TAG          |   |    +-------------------------+
           +------------------------+   |    |  Encapsulated Priority  |
           |         C-TAG          |   |    |        (16 bits)        |
           +------------------------+   |    +-------------------------+
           | CN-TAG = SampledFrame. |   |    |  Encapsulated MAC-DA    |
           |       CN-TAG           |   |    |        (48 bits)        |
           +------------------------+   |    +-------------------------+
           |       CNM Payload      +---|    |Encapsulated Frame Length|
           +------------------------+   |    |         = 64            |
                                        |    +-------------------------+
                                        +----+ First 64 bytes of the   |
                                             |Sampled Data Frame MSDU  |
                                             +-------------------------+

                    Figure 6. Transfer Private CNM to Standard CNM 

5)As shown in the Figure 7 , T4 recognize which flow causes the
congestion. CP construct the standard CNP. The adaptor of RoCEv2 server
support CNP and reduce the transmission rate according to the
probability of CNP reception.


                   +-----------+                +-----------+
 


Xiang Yu                Expires January 9, 2020                [Page 11]

INTERNET DRAFT    L3 Quantized Congestion Notification      July 8, 2019


                   |  SPINE#1  |                |  SPINE#2  |
                   |         ** * *             |           |
                   +--------*--+     *          +-----------+
                             *         *
                              *          *
                               *           *
           +-----------+  +-----*-----+  +----*------+  +-----------+
           |   AGG#1   |  |  AGG*2    |  |   AGG#3   |  |  AGG#4    |
           |           |  |     *     |  |        *  |  |           |
           +-----------+  +-----*-----+  +----------*+  +-----------+
                                *                     *
                                *                       *
                                *                         *
                                *                        Standard CNP
           +-----------+  +-----*-----+  +-----------+  +-----*-----+
           |  TOR#1    |  |  TOR*2    |  |   TOR#3   |  |  TOR#4    |
           |           |  |     *     |  |           |  |   /---\   |
           +-----------+  +-----*-   -+  +-----------+  +- | CP  | -+
                                * /|\                       \---/
                                *  |                          |
                           Standard|CNP                       |
                                *  |                         \|/
           +-----------+  +-----*--+--+  +-----------+  +-----------+
           | SERVER#1  |  | SERVER#2  |  |  SERVER#3 |  | SERVER#4  |
           |           |  |           |  |           |  |           |
           +-----------+  +-----------+  +-----------+  +-----------+

          Figure 7.  CP construct the standard CNP based on RoCEv2

6. Conclusion

L3QCN resolve the problem that QCN could not support L3 network. L3QCN
realize the QCN mechanism across the L3 network. There is no
modification on the QCN servers. For the RoCEv2 traffic, since the CP
send the CNP when reach the congestion threshold, it reduce the Control
Loop Delay to achieve bounded delay and fast convergence. The
performance of the network is improved.

L3QCN use CNP as one kind of CNM definition. Actually, L3QCN does not
restrict the format of the congestion signal. The CNM could be defined
to carry more information such as dynamic statistics of ECN and
congestion state. How to use the queue parameters defined in QCN is
worth more consideration. 

In the TOR to NIC feedback loop, CNM could contain information to inform
RP not only decrease the injection rate but also increase the injection
rate explicitly instead of recover algorisms defined in QCN. CNM could
also contains the available bandwidth for RP to inject the flows. L3QCN
 


Xiang Yu                Expires January 9, 2020                [Page 12]

INTERNET DRAFT    L3 Quantized Congestion Notification      July 8, 2019


could consider TOR to TOR feedback loop which realize the network side
congestion control.

7  Security Considerations

N/A

8  IANA Considerations

Will apply the specific UDP port No. if required. 

9  References

9.1  Normative References

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
Requirement Levels", BCP 14, RFC 2119, DOI 10.17487/RFC2119, March 1997,
 <https://www.rfc-editor.org/info/rfc2119>.

[RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC 2119
Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174, May 2017,
<https://www.rfc-editor.org/info/rfc8174>.

9.2  Informative References

   [ETS] IEEE 802.1: 802.1Qaz - Enhanced Transmission Selection,
<https://1.ieee802.org/dcb/802-1qaz/>

   [PFC] IEEE 802.1: 802.1Qbb -  Priority-based Flow Control,
<https://1.ieee802.org/dcb/802-1qbb/> 

   [QCN] IEEE 802.1: 802.1Qau - Congestion Notification,
<https://1.ieee802.org/dcb/802-1qau/>

   [DCQCN] Zhu Y, Eran H, Firestone D, et al. Congestion control for
large-scale RDMA deployments. ACM SIGCOMM Computer Communication Review,
2015, 45(4): 523-536.

   [RoCEv2] "Infiniband Trade Association. Supplement to InfiniBand
architecture specification volume 1 release 1.2.2 annex A17: RoCEv2 (IP
routable RoCE)." <https://cw.infinibandta.org/document/dl/7781>

   [ECN]  K. Ramakrishnan, S. Floyd, and D. Black. The addition of
explicit congestion notification (ECN). RFC 3168


Authors' Addresses

 


Xiang Yu                Expires January 9, 2020                [Page 13]

INTERNET DRAFT    L3 Quantized Congestion Notification      July 8, 2019


Xiang Yu
101 SOFTWARE AV., YUHUATAI DIST., NANJING,
JIANGSU,210012,CHINA
EMail: yolanda.yu@huawei.com















































Xiang Yu                Expires January 9, 2020                [Page 14]
